# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-17 14:49
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=255, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=255, verbose_name='last name')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('activation_key', models.CharField(max_length=200, null=True)),
                ('address', models.CharField(max_length=200, null=True)),
                ('city', models.CharField(max_length=200, null=True)),
                ('region', models.CharField(max_length=200, null=True)),
                ('country', models.CharField(max_length=200, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
            },
        ),
        migrations.CreateModel(
            name='CashFlowInOut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_type', models.IntegerField(choices=[(0, 'Cash In'), (1, 'Cash Out')], db_index=True, default=0)),
                ('debtor_name', models.CharField(blank=True, max_length=255)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CashFlowInOutValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_value', models.FloatField(blank=True, null=True)),
                ('target_value', models.FloatField(blank=True, null=True)),
                ('week_index', models.CharField(db_index=True, max_length=8, verbose_name='Week index representation')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.CashFlowInOut')),
            ],
        ),
        migrations.CreateModel(
            name='CompletionReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_index', models.CharField(db_index=True, max_length=8, verbose_name='Week index representation')),
                ('completion_rate', models.IntegerField(default=0)),
                ('report_emailed', models.BooleanField(db_index=True, default=False)),
                ('report_emailed_to', models.CharField(blank=True, max_length=200, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContactsMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.CharField(db_index=True, max_length=200)),
                ('message', models.TextField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, max_length=200, null=True)),
                ('hash', models.CharField(db_index=True, max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_edit_target', models.BooleanField(default=False)),
                ('can_edit_cashflow', models.BooleanField(default=False)),
                ('cashflow_weeks', models.IntegerField(default=13)),
                ('cashflow_start_week', models.CharField(blank=True, max_length=8, verbose_name='Cashflow start week')),
                ('coach_notify_email', models.CharField(blank=True, max_length=200, null=True)),
                ('disabled', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Customer Groups',
            },
        ),
        migrations.CreateModel(
            name='Number',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, unique=True)),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('short_description', models.TextField(blank=True, max_length=200, null=True)),
                ('number_index', models.CharField(blank=True, max_length=100, null=True, verbose_name='Number Index (required for formulas)')),
                ('is_formula', models.BooleanField(db_index=True, default=False, verbose_name='Formula actual')),
                ('is_target_formula', models.BooleanField(db_index=True, default=False, verbose_name='Formula target')),
                ('is_negative_green', models.BooleanField(default=False, verbose_name='Revert colors (negative is green)')),
                ('is_optional', models.BooleanField(db_index=True, default=False, verbose_name='Optional field while building completion report')),
                ('weight', models.IntegerField(default=0, verbose_name='Order weight')),
                ('prefix', models.CharField(blank=True, default='', max_length=10, verbose_name='Num value prefix to display, e.g. %,$, etc.')),
                ('number_type', models.IntegerField(choices=[(0, 'Float'), (1, 'String'), (2, 'Boolean')], default=0)),
                ('target_symbol', models.CharField(blank=True, max_length=100, null=True)),
                ('actual_symbol', models.CharField(blank=True, max_length=100, null=True)),
                ('variance_symbol', models.CharField(blank=True, max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='NumberValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_value', models.CharField(blank=True, max_length=200, null=True)),
                ('target_value', models.CharField(blank=True, max_length=200, null=True)),
                ('week_index', models.CharField(db_index=True, max_length=8, verbose_name='Week index representation')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.Number')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='customers', to='apps.CustomerGroup'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='numbervalue',
            unique_together=set([('number', 'week_index', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='completionreport',
            unique_together=set([('user', 'week_index')]),
        ),
        migrations.AlterUniqueTogether(
            name='cashflowinoutvalue',
            unique_together=set([('week_index', 'flow')]),
        ),
    ]
